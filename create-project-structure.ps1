# Create-Angular-Project-Structure.ps1
# Script PowerShell para criar a estrutura completa do projeto Angular EntraId

param(
    [Parameter(Mandatory=$false)]
    [string]$ProjectPath = ".\entra-id-angular-app",
    
    [Parameter(Mandatory=$false)]
    [switch]$Force,
    
    [Parameter(Mandatory=$false)]
    [switch]$CreateAngularProject
)

# Fun√ß√£o para criar diret√≥rio se n√£o existir
function New-DirectoryIfNotExists {
    param([string]$Path)
    
    if (!(Test-Path $Path)) {
        New-Item -ItemType Directory -Path $Path -Force | Out-Null
        Write-Host "‚úÖ Criado diret√≥rio: $Path" -ForegroundColor Green
    } else {
        Write-Host "üìÅ Diret√≥rio j√° existe: $Path" -ForegroundColor Yellow
    }
}

# Fun√ß√£o para criar arquivo vazio
function New-EmptyFile {
    param(
        [string]$FilePath,
        [string]$Description = ""
    )
    
    $directory = Split-Path $FilePath -Parent
    New-DirectoryIfNotExists -Path $directory
    
    if ($Force -or !(Test-Path $FilePath)) {
        New-Item -ItemType File -Path $FilePath -Force | Out-Null
        Write-Host "üìÑ Criado arquivo: $FilePath" -ForegroundColor Cyan
        if ($Description) {
            Write-Host "   ‚îî‚îÄ $Description" -ForegroundColor Gray
        }
    } else {
        Write-Host "‚ö†Ô∏è  Arquivo j√° existe: $FilePath" -ForegroundColor Yellow
    }
}

# Banner inicial
Write-Host @"
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                  ANGULAR ENTRA ID PROJECT                   ‚ïë
‚ïë              Structure Creator Script v1.0                  ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
"@ -ForegroundColor Cyan

Write-Host "`nüöÄ Criando estrutura do projeto Angular EntraId..." -ForegroundColor White
Write-Host "üìç Caminho do projeto: $ProjectPath" -ForegroundColor White
Write-Host ""

# Verificar se deve criar projeto Angular
if ($CreateAngularProject) {
    Write-Host "üîß Verificando Angular CLI..." -ForegroundColor Yellow
    
    try {
        $ngVersion = ng version --json 2>$null | ConvertFrom-Json
        Write-Host "‚úÖ Angular CLI encontrado: $($ngVersion.packages.'@angular/cli'.version)" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Angular CLI n√£o encontrado. Instale com: npm install -g @angular/cli@latest" -ForegroundColor Red
        exit 1
    }

    Write-Host "üì¶ Criando projeto Angular..." -ForegroundColor Yellow
    if (Test-Path $ProjectPath) {
        if ($Force) {
            Remove-Item $ProjectPath -Recurse -Force
            Write-Host "üóëÔ∏è  Diret√≥rio existente removido" -ForegroundColor Yellow
        } else {
            Write-Host "‚ùå Diret√≥rio j√° existe. Use -Force para sobrescrever" -ForegroundColor Red
            exit 1
        }
    }
    
    $projectName = Split-Path $ProjectPath -Leaf
    $parentPath = Split-Path $ProjectPath -Parent
    if ([string]::IsNullOrEmpty($parentPath)) { $parentPath = "." }
    
    Set-Location $parentPath
    ng new $projectName --routing --style=scss --standalone --skip-git --package-manager=npm
    Set-Location $projectName
    $ProjectPath = Get-Location
} else {
    # Criar diret√≥rio raiz se n√£o existir
    New-DirectoryIfNotExists -Path $ProjectPath
    Set-Location $ProjectPath
}

Write-Host "`nüìÅ Criando estrutura de diret√≥rios..." -ForegroundColor Yellow

# Estrutura de diret√≥rios
$directories = @(
    "src",
    "src/app",
    "src/app/core",
    "src/app/core/models",
    "src/app/core/services",
    "src/app/core/guards",
    "src/app/core/interceptors",
    "src/app/features",
    "src/app/features/auth",
    "src/app/features/auth/login",
    "src/app/features/auth/callback",
    "src/app/features/dashboard",
    "src/app/features/profile",
    "src/app/shared",
    "src/app/shared/components",
    "src/app/shared/components/header",
    "src/app/shared/layout",
    "src/environments",
    "src/assets",
    "src/assets/images"
)

foreach ($dir in $directories) {
    New-DirectoryIfNotExists -Path $dir
}

Write-Host "`nüìÑ Criando arquivos do projeto..." -ForegroundColor Yellow

# Arquivos de configura√ß√£o raiz
New-EmptyFile -FilePath "package.json" -Description "Depend√™ncias e scripts do projeto"
New-EmptyFile -FilePath "angular.json" -Description "Configura√ß√£o do Angular CLI"
New-EmptyFile -FilePath "README.md" -Description "Documenta√ß√£o do projeto"
New-EmptyFile -FilePath "tsconfig.json" -Description "Configura√ß√£o TypeScript"
New-EmptyFile -FilePath "tsconfig.app.json" -Description "Configura√ß√£o TypeScript para app"
New-EmptyFile -FilePath "tsconfig.spec.json" -Description "Configura√ß√£o TypeScript para testes"
New-EmptyFile -FilePath ".gitignore" -Description "Arquivos ignorados pelo Git"

# Arquivos de ambiente
New-EmptyFile -FilePath "src/environments/environment.ts" -Description "Configura√ß√µes de desenvolvimento"
New-EmptyFile -FilePath "src/environments/environment.prod.ts" -Description "Configura√ß√µes de produ√ß√£o"

# Arquivos principais da aplica√ß√£o
New-EmptyFile -FilePath "src/main.ts" -Description "Bootstrap da aplica√ß√£o"
New-EmptyFile -FilePath "src/styles.scss" -Description "Estilos globais da aplica√ß√£o"
New-EmptyFile -FilePath "src/index.html" -Description "P√°gina HTML principal"
New-EmptyFile -FilePath "src/favicon.ico" -Description "√çcone da aplica√ß√£o"

# Arquivos do app principal
New-EmptyFile -FilePath "src/app/app.component.ts" -Description "Componente raiz da aplica√ß√£o"
New-EmptyFile -FilePath "src/app/app.config.ts" -Description "Configura√ß√£o da aplica√ß√£o"
New-EmptyFile -FilePath "src/app/app.routes.ts" -Description "Rotas da aplica√ß√£o"

# Modelos (Models)
Write-Host "`nüìã Criando modelos..." -ForegroundColor Magenta
New-EmptyFile -FilePath "src/app/core/models/user.model.ts" -Description "Interfaces de usu√°rio e autentica√ß√£o"
New-EmptyFile -FilePath "src/app/core/models/tenant.model.ts" -Description "Interfaces de tenant, grupos e login"
New-EmptyFile -FilePath "src/app/core/models/api-response.model.ts" -Description "Interface de resposta da API"

# Servi√ßos (Services)
Write-Host "`nüîß Criando servi√ßos..." -ForegroundColor Magenta
New-EmptyFile -FilePath "src/app/core/services/msal.service.ts" -Description "Servi√ßo de autentica√ß√£o MSAL"
New-EmptyFile -FilePath "src/app/core/services/tenant.service.ts" -Description "Servi√ßo de dados do tenant"

# Guards e Interceptors
Write-Host "`nüõ°Ô∏è Criando guards e interceptors..." -ForegroundColor Magenta
New-EmptyFile -FilePath "src/app/core/guards/auth.guard.ts" -Description "Guard de autentica√ß√£o de rotas"
New-EmptyFile -FilePath "src/app/core/interceptors/msal.interceptor.ts" -Description "Interceptor HTTP para tokens MSAL"

# Componentes de Autentica√ß√£o
Write-Host "`nüîê Criando componentes de autentica√ß√£o..." -ForegroundColor Magenta
New-EmptyFile -FilePath "src/app/features/auth/login/login.component.ts" -Description "Componente de login com MSAL"
New-EmptyFile -FilePath "src/app/features/auth/callback/callback.component.ts" -Description "Componente de callback MSAL"

# Componentes Features
Write-Host "`nüìä Criando componentes principais..." -ForegroundColor Magenta
New-EmptyFile -FilePath "src/app/features/dashboard/dashboard.component.ts" -Description "Dashboard principal com m√©tricas"
New-EmptyFile -FilePath "src/app/features/profile/profile.component.ts" -Description "Perfil detalhado do usu√°rio"

# Componentes Shared
Write-Host "`nüîÑ Criando componentes compartilhados..." -ForegroundColor Magenta
New-EmptyFile -FilePath "src/app/shared/components/header/header.component.ts" -Description "Header da aplica√ß√£o"
New-EmptyFile -FilePath "src/app/shared/layout/main-layout.component.ts" -Description "Layout principal da aplica√ß√£o"

# Arquivos adicionais √∫teis
Write-Host "`nüìù Criando arquivos adicionais..." -ForegroundColor Magenta
New-EmptyFile -FilePath ".editorconfig" -Description "Configura√ß√£o do editor"
New-EmptyFile -FilePath ".eslintrc.json" -Description "Configura√ß√£o ESLint"
New-EmptyFile -FilePath "karma.conf.js" -Description "Configura√ß√£o de testes"

# Arquivos de deploy (opcionais)
New-EmptyFile -FilePath ".azure/staticwebapp.config.json" -Description "Configura√ß√£o Azure Static Web Apps"
New-EmptyFile -FilePath "Dockerfile" -Description "Configura√ß√£o Docker"

# Mostrar resumo
Write-Host "`n" + "="*80 -ForegroundColor Cyan
Write-Host "üéâ ESTRUTURA CRIADA COM SUCESSO!" -ForegroundColor Green
Write-Host "="*80 -ForegroundColor Cyan

Write-Host "`nüìä Estat√≠sticas:" -ForegroundColor Yellow
$totalDirs = (Get-ChildItem -Recurse -Directory | Measure-Object).Count
$totalFiles = (Get-ChildItem -Recurse -File | Measure-Object).Count
Write-Host "   üìÅ Diret√≥rios criados: $totalDirs" -ForegroundColor White
Write-Host "   üìÑ Arquivos criados: $totalFiles" -ForegroundColor White

Write-Host "`nüìã Pr√≥ximos passos:" -ForegroundColor Yellow
Write-Host "   1. Preencher os arquivos com o c√≥digo fornecido" -ForegroundColor White
Write-Host "   2. Configurar credenciais Azure AD no environment.ts" -ForegroundColor White
Write-Host "   3. Instalar depend√™ncias: npm install" -ForegroundColor White
Write-Host "   4. Executar: npm start" -ForegroundColor White

Write-Host "`nüìÅ Estrutura criada em: $((Get-Location).Path)" -ForegroundColor Cyan

Write-Host "`nüîß Comandos √∫teis:" -ForegroundColor Yellow
Write-Host "   # Instalar depend√™ncias Angular e PrimeNG" -ForegroundColor Gray
Write-Host "   npm install @azure/msal-angular @azure/msal-browser primeng primeicons primeflex" -ForegroundColor White
Write-Host ""
Write-Host "   # Executar aplica√ß√£o" -ForegroundColor Gray
Write-Host "   npm start" -ForegroundColor White
Write-Host ""
Write-Host "   # Build para produ√ß√£o" -ForegroundColor Gray
Write-Host "   npm run build --prod" -ForegroundColor White

Write-Host "`n‚ú® Estrutura pronta para desenvolvimento!" -ForegroundColor Green

# Criar arquivo de estrutura para refer√™ncia
$structureFile = "ESTRUTURA-PROJETO.md"
$structureContent = @"
# Estrutura do Projeto Angular EntraId

Criado em: $(Get-Date -Format "yyyy-MM-dd HH:mm:ss")

## üìÅ Estrutura de Diret√≥rios

\`\`\`
entra-id-angular-app/
‚îú‚îÄ‚îÄ .azure/
‚îÇ   ‚îî‚îÄ‚îÄ staticwebapp.config.json
‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îú‚îÄ‚îÄ app/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ core/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ models/
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ user.model.ts
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ tenant.model.ts
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ api-response.model.ts
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ services/
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ msal.service.ts
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ tenant.service.ts
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ guards/
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ auth.guard.ts
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ interceptors/
‚îÇ   ‚îÇ   ‚îÇ       ‚îî‚îÄ‚îÄ msal.interceptor.ts
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ features/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ auth/
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ login/
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ login.component.ts
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ callback/
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ       ‚îî‚îÄ‚îÄ callback.component.ts
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ dashboard/
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ dashboard.component.ts
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ profile/
‚îÇ   ‚îÇ   ‚îÇ       ‚îî‚îÄ‚îÄ profile.component.ts
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ shared/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ components/
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ header/
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ       ‚îî‚îÄ‚îÄ header.component.ts
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ layout/
‚îÇ   ‚îÇ   ‚îÇ       ‚îî‚îÄ‚îÄ main-layout.component.ts
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ app.component.ts
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ app.config.ts
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ app.routes.ts
‚îÇ   ‚îú‚îÄ‚îÄ environments/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ environment.ts
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ environment.prod.ts
‚îÇ   ‚îú‚îÄ‚îÄ assets/
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ images/
‚îÇ   ‚îú‚îÄ‚îÄ main.ts
‚îÇ   ‚îú‚îÄ‚îÄ styles.scss
‚îÇ   ‚îú‚îÄ‚îÄ index.html
‚îÇ   ‚îî‚îÄ‚îÄ favicon.ico
‚îú‚îÄ‚îÄ package.json
‚îú‚îÄ‚îÄ angular.json
‚îú‚îÄ‚îÄ tsconfig.json
‚îú‚îÄ‚îÄ tsconfig.app.json
‚îú‚îÄ‚îÄ tsconfig.spec.json
‚îú‚îÄ‚îÄ karma.conf.js
‚îú‚îÄ‚îÄ .eslintrc.json
‚îú‚îÄ‚îÄ .editorconfig
‚îú‚îÄ‚îÄ .gitignore
‚îú‚îÄ‚îÄ Dockerfile
‚îî‚îÄ‚îÄ README.md
\`\`\`

## üéØ Descri√ß√£o dos Arquivos

### Configura√ß√£o
- **package.json**: Depend√™ncias e scripts do projeto
- **angular.json**: Configura√ß√£o do Angular CLI
- **tsconfig.json**: Configura√ß√£o TypeScript global
- **README.md**: Documenta√ß√£o do projeto

### Core (N√∫cleo)
- **models/**: Interfaces TypeScript para dados
- **services/**: Servi√ßos de neg√≥cio e integra√ß√£o
- **guards/**: Guards de autentica√ß√£o de rotas
- **interceptors/**: Interceptors HTTP

### Features (Funcionalidades)
- **auth/**: Componentes de autentica√ß√£o
- **dashboard/**: Dashboard principal
- **profile/**: Perfil do usu√°rio

### Shared (Compartilhado)
- **components/**: Componentes reutiliz√°veis
- **layout/**: Layouts da aplica√ß√£o

### Environments
- **environment.ts**: Configura√ß√µes de desenvolvimento
- **environment.prod.ts**: Configura√ß√µes de produ√ß√£o

## üöÄ Tecnologias

- Angular 17+ (Standalone Components)
- PrimeNG 17+ (Material Theme)
- MSAL Angular (Microsoft Authentication)
- TypeScript 5.4+
- SCSS
- RxJS com Signals

## ‚öôÔ∏è Configura√ß√£o

1. Preencher arquivos com c√≥digo fornecido
2. Configurar Azure AD no environment.ts
3. \`npm install\`
4. \`npm start\`

---
Gerado automaticamente pelo script Create-Angular-Project-Structure.ps1
"@

Set-Content -Path $structureFile -Value $structureContent -Encoding UTF8
Write-Host "`nüìã Arquivo de refer√™ncia criado: $structureFile" -ForegroundColor Green

Write-Host "`nüéØ Script conclu√≠do com sucesso!" -ForegroundColor Green